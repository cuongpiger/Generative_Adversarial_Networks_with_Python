# Define the StorageClass
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: csi-cinderplugin-sc-5000
parameters:
  type: 4dc87b5b-08e4-49ff-8ad5-dcbdc6c38daf
provisioner: cinder.csi.openstack.org
allowVolumeExpansion: true
---

apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: csi-cinderplugin-sc-10000
parameters:
  type: 7816bad1-7f5b-4400-b2fd-b6334dc32d4b
provisioner: cinder.csi.openstack.org
allowVolumeExpansion: true
---

# Define the source PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: source-pvc
spec:
  storageClassName: csi-cinderplugin-sc-5000
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---

apiVersion: v1
kind: Pod
metadata:
  name: nginx
spec:
  containers:
  - image: nginx
    imagePullPolicy: IfNotPresent
    name: nginx
    ports:
    - containerPort: 80
      protocol: TCP
    volumeMounts:
      - mountPath: /var/lib/www/html
        name: csi-data-cinderplugin
  volumes:
  - name: csi-data-cinderplugin
    persistentVolumeClaim:
      claimName: source-pvc
      readOnly: false
---


# Define the cloned PVC
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: csi-pvc-clone
spec:
  dataSource:
    name: source-pvc
    kind: PersistentVolumeClaim
    apiGroup: ""
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: csi-cinderplugin-sc-10000
---

# Define the Pod that using the cloned PVC
apiVersion: v1
kind: Pod
metadata:
  name: nginx-2
spec:
  containers:
  - image: nginx
    imagePullPolicy: IfNotPresent
    name: nginx
    ports:
    - containerPort: 80
      protocol: TCP
    volumeMounts:
      - mountPath: /var/lib/www/html
        name: csi-data-cinderplugin
  volumes:
  - name: csi-data-cinderplugin
    persistentVolumeClaim:
      claimName: source-pvc
      readOnly: false
      